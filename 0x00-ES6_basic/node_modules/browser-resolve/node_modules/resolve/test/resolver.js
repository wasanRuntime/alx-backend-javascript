var path = require('path');
var test = require('tape');
var resolve = require('../');

test('async foo', function (t) {
    t.plan(9);
    var dir = __dirname + '/resolver';
    
    resolve('./foo', { basedir : dir }, function (err, res, pkg) {
        if (err) t.fail(err);
        t.equal(res, dir + '/foo.js');
        t.equal(pkg.name, 'resolve');
    });
    
    resolve('./foo.js', { basedir : dir }, function (err, res, pkg) {
        if (err) t.fail(err);
        t.equal(res, dir + '/foo.js');
        t.equal(pkg.name, 'resolve');
    });
    
    resolve('./foo', { basedir : dir, package: { main: 'resolver' } }, function (err, res, pkg) {
        if (err) t.fail(err);
        t.equal(res, dir + '/foo.js');
        t.equal(pkg.main, 'resolver');
    });
    
    resolve('./foo.js', { basedir : dir, package: { main: 'resolver' } }, function (err, res, pkg) {
        if (err) t.fail(err);
        t.equal(res, dir + '/foo.js');
        t.equal(pkg.main, 'resolver');
    });
    
    resolve('foo', { basedir : dir }, function (err) {
        t.equal(err.message, "Cannot find module 'foo' from '" + path.resolve(dir) + "'");
    });
});

test('bar', function (t) {
    t.plan(6);
    var dir = __dirname + '/resolver';
    
    resolve('foo', { basedir : dir + '/bar' }, function (err, res, pkg) {
        if (err) t.fail(err);
        t.equal(res, dir + '/bar/node_modules/foo/index.js');
        t.equal(pkg, undefined);
    });
    
    resolve('foo', { basedir : dir + '/bar' }, function (err, res, pkg) {
        if (err) t.fail(err);
        t.equal(res, dir + '/bar/node_modules/foo/index.js');
        t.equal(pkg, undefined);
    });
    
    resolve('foo', { basedir : dir + '/bar', package: { main: 'bar' } }, function (err, res, pkg) {
        if (err) t.fail(err);
        t.equal(res, dir + '/bar/node_modules/foo/index.js');
        t.equal(pkg, undefined);
    });
});

test('baz', function (t) {
    t.plan(4);
    var dir = __dirname + '/resolver';
    
    resolve('./baz', { basedir : dir }, function (err, res, pkg) {
        if (err) t.fail(err);
        t.equal(res, dir + '/baz/